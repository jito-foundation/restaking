name: ci

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  security_audit:
    name: security_audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install cargo-audit from crates.io
        uses: baptiste0928/cargo-install@v3
        with:
          crate: cargo-audit
      - run: cargo audit --ignore RUSTSEC-2022-0093 --ignore RUSTSEC-2023-0065 --ignore RUSTSEC-2024-0344

  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt, clippy
          toolchain: nightly-2024-07-25
      - name: Install cargo-sort from crates.io
        uses: baptiste0928/cargo-install@v3
        with:
          crate: cargo-sort
      - run: cargo sort --workspace --check
      - run: cargo fmt --all --check
      - run: cargo clippy --all-features -- -D warnings -D clippy::all -D clippy::nursery -D clippy::integer_division -D clippy::arithmetic_side_effects -D clippy::style -D clippy::perf

  build:
    name: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        network: [ mainnet-beta, testnet, localhost, devnet ]
    steps:
      - uses: actions/checkout@v4
      - uses: aarcangeli/load-dotenv@v1.0.0
        with:
          path: config
          filenames: ${{ matrix.network }}.env
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: install solana toolsuite
        run: sh -c "$(curl -sSfL https://release.solana.com/v1.18.22/install)"
      - name: add to path
        run: echo "/home/runner/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
      - name: Build ${{ matrix.network }}
        run: cargo-build-sbf
        env:
          RESTAKING_PROGRAM_ID: ${{ env.RESTAKING_PROGRAM_ID }}
          VAULT_PROGRAM_ID: ${{ env.VAULT_PROGRAM_ID }}
      - name: Upload restaking program
        uses: actions/upload-artifact@v4
        with:
          name: jito_restaking_program_${{ matrix.network }}.so
          path: target/sbf-solana-solana/release/jito_restaking_program.so
      - name: Upload vault program
        uses: actions/upload-artifact@v4
        with:
          name: jito_vault_program_${{ matrix.network }}.so
          path: target/sbf-solana-solana/release/jito_vault_program.so

  coverage:
    name: coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt, clippy
          toolchain: nightly-2024-07-25
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Generate code coverage
        run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info
        env:
          RESTAKING_PROGRAM_ID: Cnp3S1G3JaaAoFpFR3FhM94DdEF1mMBqy5vjwtDaVZLi
          VAULT_PROGRAM_ID: 94sqeuUnjJCmwZUp8nGK7Q7o8YnHSW9Y3TcPZJY2PycN
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4.5.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: jito-foundation/restaking
          fail_ci_if_error: true

  test_sbf:
    name: cargo test
    runs-on: ubuntu-latest
    needs:
      - build
    strategy:
      matrix:
        network: [ mainnet-beta, testnet, localhost, devnet ]
    steps:
      - uses: actions/checkout@v4
      - uses: aarcangeli/load-dotenv@v1.0.0
        with:
          path: config
          filenames: ${{ matrix.network }}.env
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Download restaking program
        uses: actions/download-artifact@v4
        with:
          name: jito_restaking_program_${{ matrix.network }}.so
          path: target/sbf-solana-solana/release/
      - name: Download vault program
        uses: actions/download-artifact@v4
        with:
          name: jito_vault_program_${{ matrix.network }}.so
          path: target/sbf-solana-solana/release/
      - run: ls -lh
      - run: ls -lh target/sbf-solana-solana/release/
      - uses: taiki-e/install-action@nextest
      - run: cargo nextest run --all-features
        env:
          SBF_OUT_DIR: ${{ github.workspace }}/target/sbf-solana-solana/release