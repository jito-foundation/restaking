/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import {
  combineCodec,
  getStructDecoder,
  getStructEncoder,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/web3.js';
import {
  getPodU64Decoder,
  getPodU64Encoder,
  type PodU64,
  type PodU64Args,
} from '.';

export type DelegationState = {
  stakedAmount: PodU64;
  enqueuedForCooldownAmount: PodU64;
  coolingDownAmount: PodU64;
};

export type DelegationStateArgs = {
  stakedAmount: PodU64Args;
  enqueuedForCooldownAmount: PodU64Args;
  coolingDownAmount: PodU64Args;
};

export function getDelegationStateEncoder(): Encoder<DelegationStateArgs> {
  return getStructEncoder([
    ['stakedAmount', getPodU64Encoder()],
    ['enqueuedForCooldownAmount', getPodU64Encoder()],
    ['coolingDownAmount', getPodU64Encoder()],
  ]);
}

export function getDelegationStateDecoder(): Decoder<DelegationState> {
  return getStructDecoder([
    ['stakedAmount', getPodU64Decoder()],
    ['enqueuedForCooldownAmount', getPodU64Decoder()],
    ['coolingDownAmount', getPodU64Decoder()],
  ]);
}

export function getDelegationStateCodec(): Codec<
  DelegationStateArgs,
  DelegationState
> {
  return combineCodec(getDelegationStateEncoder(), getDelegationStateDecoder());
}
