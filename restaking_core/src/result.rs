use solana_program::program_error::ProgramError;

pub type RestakingCoreResult<T> = Result<T, RestakingCoreError>;

#[derive(Debug, PartialEq, Eq)]
pub enum RestakingCoreError {
    NcnInvalidAdmin,
    VaultFailedToActivate,
    VaultFailedToDeactivate,
    VaultNotFound,
    OperatorInvalidAdmin,
    VaultNotActive,
    NcnInvalidOperatorAdmin,
    NcnInvalidVaultAdmin,
    OperatorAlreadyAdded,
    NcnNotActive,
    NcnNotFound,
    NcnInvalidSlasherAdmin,
    VaultNotActiveOrCoolingDown,
    VaultSlasherAlreadyExists,
    VaultSlasherNotActive,
    VaultSlasherNotFound,
    OperatorAlreadyRemoved,
    OperatorNotFound,
    NcnInvalidWithdrawAdmin,
    NcnFailedToActivate,
    NcnFailedToDeactivate,
    SlasherNotActive,
    OperatorNotActive,
    NcnOperatorTicketEmpty,
    NcnOperatorTicketInvalidOwner,
    NcnOperatorTicketInvalidAccountType,
    NcnOperatorTicketInvalidPda,
    NcnSlasherTicketEmpty,
    NcnSlasherTicketInvalidOwner,
    NcnSlasherTicketInvalidAccountType,
    NcnSlasherTicketInvalidPda,
    NcnVaultTicketEmpty,
    NcnVaultTicketInvalidOwner,
    NcnVaultTicketInvalidAccountType,
    NcnVaultTicketInvalidPda,
    OperatorNcnTicketEmpty,
    OperatorNcnTicketInvalidOwner,
    OperatorNcnTicketInvalidAccountType,
    OperatorNcnTicketInvalidPda,
    OperatorVaultTicketEmpty,
    OperatorVaultTicketInvalidOwner,
    OperatorVaultTicketInvalidAccountType,
    OperatorVaultTicketInvalidPda,
    OperatorVaultTicketInvalidData(String),
    NcnOperatorTicketInvalidData(String),
    NcnSlasherTicketInvalidData(String),
    NcnVaultTicketInvalidData(String),
    OperatorNcnTicketInvalidData(String),
    NcnOperatorTicketExpectedWritable,
    NcnSlasherTicketNotWritable,
    NcnVaultTicketNotWritable,
    OperatorNcnTicketNotWritable,
    OperatorVaultTicketNotWritable,
    OperatorCountOverflow,
    NcnOperatorCountOverflow,
    OperatorNcnTicketNotActive,
    NcnVaultCountOverflow,
    NcnVaultTicketInactive,
    NcnSlasherCountOverflow,
    NcnVaultSlasherTicketInactive,
    NcnOperatorTicketInvalidState,
    NcnOperatorTicketInactive,
    OperatorInvalidNcnAdmin,
    OperatorInvalidVaultAdmin,
    OperatorNcnCountOverflow,
    OperatorVaultCountOverflow,
    OperatorVaultTicketAlreadyDeactivated,
    NcnEmpty,
    NcnInvalidOwner,
    NcnInvalidData(String),
    NcnInvalidAccountType,
    NcnInvalidPda,
    NcnNotWritable,
    OperatorVaultTicketInactive,
    OperatorNcnTicketAlreadyInactive,
    NcnOverflow,
    OperatorOverflow,
    ConfigNotWritable,
    ConfigEmpty,
    ConfigInvalidOwner,
    ConfigInvalidData(String),
    ConfigInvalidAccountType,
    ConfigInvalidPda,
    OperatorDataEmpty,
    OperatorInvalidOwner,
    OperatorInvalidData(String),
    OperatorInvalidAccountType,
    OperatorInvalidPda,
    OperatorNotWritable,
}

impl From<RestakingCoreError> for ProgramError {
    fn from(_value: RestakingCoreError) -> Self {
        Self::Custom(0)
    }
}
